name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  actions: read

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  check-if-release-needed:
    runs-on: [ ubuntu-latest ]
    outputs:
      RELEASE: ${{ steps.is-release-needed.outputs.RELEASE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: 22
      - name: npm install
        run: npm run install-ci
      - name: Is release needed?
        id: "is-release-needed"
        run: ./.scripts/is-release.sh

  release:
    runs-on: [ ubuntu-latest ]
    needs: "check-if-release-needed"
    if: ${{ needs.check-if-release-needed.outputs.RELEASE == 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ssh-key: ${{ secrets.DEPLOY_KEY }}
      - name: Setup NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: 22
      - name: npm install
        run: npm run install-ci
      - run: git config --global user.name "github-actions"
      - run: git config --global user.email "$(hostname)@noreply.github.com"
      - name: "Create release notes"
        id: "create-release-notes"
        run: ./.scripts/release-notes.sh
      - name: Prepare semantic release
        id: prepare-release
        run: npm run prepare-release
        env:
          BUILD_AUTHOR: "github-actions"
      # if you need to update additional files (readmes, docs, etc.) do it here
      - name: update files if needed
        run: |
          git status
          if ! git diff --exit-code; then
            git add .
            git commit -m "chore: Auto-update $(git diff --name-only | tr '\n' ' ') for ${{ steps.prepare-release.outputs.version }}"
          fi

      - run: git push --atomic --follow-tags origin "$(git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/')"

      - name: Create Release
        id: create_release
        uses: actions/create-release@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.prepare-release.outputs.version }}
          release_name: ${{ steps.prepare-release.outputs.version }}
          draft: false
          prerelease: false
          body: |
            ${{ env.RELEASE_NOTES }}
